// Generated by CoffeeScript 1.9.3
(function() {
  var umd;

  umd = function(name, factory) {
    var _new, _old;
    if ("function" === typeof define && define.amd) {
      return define(factory);
    } else if ("undefined" !== typeof module) {
      return module.exports = factory();
    } else {
      _old = window[name];
      _new = factory();
      window[name] = _new;
      return _new.noConflict = function() {
        window[name] = _old;
        return _new;
      };
    }
  };

  umd("random", function() {
    var _o_, _random, _seed;
    _seed = null;
    _random = Math.random;
    _o_ = {
      seed: function(seed) {
        if (seed != null) {
          _seed = seed;
          if (seed instanceof Function) {
            return _random = seed;
          } else {
            return _random = function() {
              var x;
              x = 10000 * Math.sin(seed++);
              return x - Math.floor(x);
            };
          }
        } else {
          _seed = null;
          return _random = Math.random;
        }
      },
      reseed: function() {
        return this.seed(_seed);
      },
      unseed: function() {
        return this.seed();
      },
      bool: function() {
        return _random() < 0.5;
      },
      number: function(lo, hi) {
        if (!hi) {
          hi = lo;
          lo = 0;
        }
        lo = parseFloat(lo);
        hi = parseFloat(hi);
        if (hi < lo) {
          lo ^= hi;
          hi ^= lo;
          lo ^= hi;
        }
        return _random() * (hi - lo) + lo;
      },
      integer: function(lo, hi) {
        return Math.floor(this.number(lo, hi));
      },
      choose: function(collection, other) {
        if (other != null) {
          collection = Array.prototype.slice.apply(arguments);
        }
        return collection[this.integer(collection.length)];
      },
      ALPHA: "qwertyuiopasdfghjklzxcvbnm",
      ALPHA_NUMERIC: "qwertyuiopasdfghjklzxcvbnm1234567890",
      letter: function(alphabet) {
        return this.choose(alphabet || this.ALPHA);
      },
      alphanumeric: function() {
        return this.choose(this.ALPHA_NUMERIC);
      },
      date: function(lo, hi) {
        if (!lo) {
          lo = new Date;
        } else if (!(lo instanceof Date)) {
          lo = new Date(lo);
        }
        lo = lo.getTime();
        if (hi && !hi instanceof Date) {
          hi = new Date(hi);
          hi = hi.getTime();
        }
        return new Date(this.integer(lo, hi));
      },
      string: function(format) {
        return format.replace(/\[(.+?)(?:\((.*)\))?(?:{(\d+)})?(\?)?\]/g, (function(_this) {
          return function(match, name, params, count, maybe) {
            if (maybe && _this.bool()) {
              return "";
            }
            match = "";
            count || (count = 1);
            if (params) {
              params = params.split(",").map(function(item) {
                if (item.indexOf("@")) {
                  return item;
                } else {
                  return _this[item];
                }
              });
            } else {
              params = [];
            }
            while (count--) {
              match += _this[name].apply(_this, params);
            }
            return match;
          };
        })(this));
      }
    };
    _o_.b = _o_.bool;
    _o_.n = _o_.number;
    _o_.i = _o_.integer;
    _o_.l = _o_.letter;
    _o_.a = _o_.alphanumeric;
    _o_.d = _o_.date;
    _o_.s = _o_.string;
    return _o_;
  });

}).call(this);
